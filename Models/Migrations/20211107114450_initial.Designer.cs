// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Models.Migrations
{
    [DbContext(typeof(EventContext))]
    [Migration("20211107114450_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.PublicEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.AuditLog", b =>
                {
                    b.Property<string>("RecordKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecordKey", "Username", "AuditDate", "Table", "Action");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.AuthorLog", b =>
                {
                    b.Property<string>("RecordKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AuthorDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AuthorCount")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecordKey", "Username", "AuthorDate", "Table", "AuthorCount");

                    b.ToTable("AuthorLogs");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.ParentMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ParentMenus");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.Report", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportUIModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubMenuID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubMenuID");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.SubMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Authorisers")
                        .HasColumnType("int");

                    b.Property<bool>("Authorizable")
                        .HasColumnType("bit");

                    b.Property<bool>("CaptureAuditTrail")
                        .HasColumnType("bit");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Creatable")
                        .HasColumnType("bit");

                    b.Property<bool>("Deletable")
                        .HasColumnType("bit");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentMenuID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Readable")
                        .HasColumnType("bit");

                    b.Property<bool>("RetrieveReports")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Updatable")
                        .HasColumnType("bit");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ParentMenuID");

                    b.ToTable("SubMenus");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.SystemUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AuthCount")
                        .HasColumnType("int");

                    b.Property<string>("AuthStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("AuthorisedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("DateAuthorised")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemUsers");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.SystemUserProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AuthCount")
                        .HasColumnType("int");

                    b.Property<string>("AuthStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("AuthorisedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("DateAuthorised")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserProfileID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SystemUserId");

                    b.HasIndex("UserProfileID");

                    b.ToTable("SystemUserProfiles");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AuthCount")
                        .HasColumnType("int");

                    b.Property<string>("AuthStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("AuthorisedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("CanAuthorise")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRead")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRetrieveReports")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("DateAuthorised")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.UserProfileMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AuthCount")
                        .HasColumnType("int");

                    b.Property<string>("AuthStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("AuthorisedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("CanAuthorise")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRead")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRetrieveReports")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("DateAuthorised")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("SubMenuID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserProfileID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubMenuID");

                    b.HasIndex("UserProfileID");

                    b.ToTable("UserProfileMenus");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.UserProfileReport", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AuthCount")
                        .HasColumnType("int");

                    b.Property<string>("AuthStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("AuthorisedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("DateAuthorised")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ReportID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserProfileID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ReportID");

                    b.HasIndex("UserProfileID");

                    b.ToTable("UserProfileReports");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.Report", b =>
                {
                    b.HasOne("Relational.BaseModels.AspNetCore.Generics.Models.Security.SubMenu", "SubMenu")
                        .WithMany()
                        .HasForeignKey("SubMenuID");

                    b.Navigation("SubMenu");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.SubMenu", b =>
                {
                    b.HasOne("Relational.BaseModels.AspNetCore.Generics.Models.Security.ParentMenu", "ParentMenu")
                        .WithMany("SubMenus")
                        .HasForeignKey("ParentMenuID");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.SystemUserProfile", b =>
                {
                    b.HasOne("Relational.BaseModels.AspNetCore.Generics.Models.Security.SystemUser", "SystemUser")
                        .WithMany("SystemUserProfiles")
                        .HasForeignKey("SystemUserId");

                    b.HasOne("Relational.BaseModels.AspNetCore.Generics.Models.Security.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileID");

                    b.Navigation("SystemUser");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.UserProfileMenu", b =>
                {
                    b.HasOne("Relational.BaseModels.AspNetCore.Generics.Models.Security.SubMenu", "SubMenu")
                        .WithMany()
                        .HasForeignKey("SubMenuID");

                    b.HasOne("Relational.BaseModels.AspNetCore.Generics.Models.Security.UserProfile", "UserProfile")
                        .WithMany("UserProfileMenus")
                        .HasForeignKey("UserProfileID");

                    b.Navigation("SubMenu");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.UserProfileReport", b =>
                {
                    b.HasOne("Relational.BaseModels.AspNetCore.Generics.Models.Security.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportID");

                    b.HasOne("Relational.BaseModels.AspNetCore.Generics.Models.Security.UserProfile", "UserProfile")
                        .WithMany("UserProfileReports")
                        .HasForeignKey("UserProfileID");

                    b.Navigation("Report");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.ParentMenu", b =>
                {
                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.SystemUser", b =>
                {
                    b.Navigation("SystemUserProfiles");
                });

            modelBuilder.Entity("Relational.BaseModels.AspNetCore.Generics.Models.Security.UserProfile", b =>
                {
                    b.Navigation("UserProfileMenus");

                    b.Navigation("UserProfileReports");
                });
#pragma warning restore 612, 618
        }
    }
}
